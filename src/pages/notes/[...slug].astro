---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import TableOfContents from "@components/TableOfContents.astro";

export async function getStaticPaths() {
  const notes = (await getCollection("notes"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return notes.map((note) => ({
    params: { slug: note.slug },
    props: note,
  }));
}
type Props = CollectionEntry<"notes">;

const note = Astro.props;
const { Content, headings } = await note.render();
---

<Layout title={note.data.title} description={note.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/notes">Kembali ke notes</BackToPrevious>
    </div>
    <div class="animate my-10 space-y-3">
      <div class="flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={note.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(note.body)}
        </div>
      </div>
      <h1 class="text-4xl text-black dark:text-white font-chewy tracking-wider">
        {note.data.title}
      </h1>
      <div class="gap-4 text-gray-500 text-xl leading-relaxed font-patrick-hand">{note.data.description}</div>
    </div>
    <TableOfContents headings={headings} />
    <article class="animate text-lg leading-relaxed">
      <Content />
    </article>
  </Container>
</Layout>
